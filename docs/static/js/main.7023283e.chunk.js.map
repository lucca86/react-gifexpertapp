{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGlC,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNJK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETN,EAFS,iDAEuCO,UAAWF,GAFlD,+DAGSG,MAAOR,GAHhB,cAGTS,EAHS,gBAIMA,EAAUC,OAJhB,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAV3B,kBAcRY,GAdQ,4CAAH,sDCEPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdCC,qBAAU,WACNlB,EAASC,GACJkB,MAAM,SAAAC,GAEJC,YAAY,WACRJ,EAAS,CACRV,KAAMa,EACNL,SAAS,MAEX,UAGX,CAAEd,IAECe,EDlB2BM,CAAcrB,GAAlCW,EAFuB,EAE7BL,KAAcQ,EAFe,EAEfA,QAEtB,OACI,oCACA,4BAAMd,GAEJc,GAAW,yCAEb,yBAAKlB,UAAU,aAEPe,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIa,IAAMb,EAAIC,IACLD,UEiBdc,EAhCM,WAAM,MAIa3C,mBAAS,CAAC,cAJvB,mBAIhB4C,EAJgB,KAIJ7C,EAJI,KAUvB,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGA,4BACM6C,EAAWhB,KAAI,SAAAR,GAAQ,OACrB,kBAAC,EAAD,CACIsB,IAAKtB,EACLA,SAAWA,U,MCpBnCyB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.7023283e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n         \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange } />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=PQmgZiSENwnediXimMq3phLPhBtUlpdQ`\r\n        const respuesta = await fetch( url )\r\n        const {data} = await respuesta.json()\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n    }","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n        \r\n        { loading && <p>Loading...</p> }\r\n\r\n        <div className=\"card-grid\">    \r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                        />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n     useEffect(() => {\r\n         getGifs( category )\r\n             .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n                    setstate({\r\n                     data: imgs,\r\n                     loading: false\r\n                 });\r\n                }, 3000)\r\n                 \r\n             })\r\n     }, [ category ]);\r\n\r\n    return state; // { data: [], loading: true };\r\n}","import React, {useState} from 'react';\r\nimport { CategoryAdd } from './CategoryAdd';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories, 'Spiderman'])\r\n    // }\r\n\r\n    return ( \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <CategoryAdd setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                { categories.map(category => (\r\n                    <GifGrid \r\n                        key={category}\r\n                        category={ category }/>\r\n                ))\r\n                    \r\n                }\r\n            </ol>\r\n        </> \r\n     )\r\n     ;\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}